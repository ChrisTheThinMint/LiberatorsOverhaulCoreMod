[XComGame.XGAIBehavior]

; --- Advent Trooper, Better AI
-Behaviors=(BehaviorName="AdventTrooper::CharacterRoot", NodeType=Selector, Child[0]=TryJob, Child[1]=GenericGreenMovement, Child[2]=AdvTrooper_RedAlert, Child[3]=GenericAlertHandler)
+Behaviors=(BehaviorName="AdventTrooper::CharacterRoot", NodeType=Selector, Child[0]=TryJob, Child[1]=GenericGreenMovement, Child[2]=AdvTrooper_ABA_RedAlert, Child[3]=GenericAlertHandler)

+Behaviors=(BehaviorName="AdventTrooper_ABA::CharacterRoot", NodeType=Selector, Child[0]=TryJob, Child[1]=GenericGreenMovement, Child[2]=AdvTrooper_ABA_RedAlert, Child[3]=GenericAlertHandler)
+Behaviors=(BehaviorName=AdvTrooper_ABA_RedAlert, NodeType=Sequence, Child[0]=IsRedAlert, Child[1]=AdvTrooper_ABA_RedAbilitySelector)
+Behaviors=(BehaviorName=AdvTrooper_ABA_RedAbilitySelector, NodeType=Selector, Child[0]=MimicBeaconBehavior, Child[1]=DarkEventPriorityMoveThenGrenade, Child[2]=Advent_ABA_RedFirstAction, Child[3]=Advent_ABA_RedLastAction)
+Behaviors=(BehaviorName=Advent_ABA_RedFirstAction, NodeType=Sequence, Child[0]=NotLastActionPoint, Child[1]=Advent_ABA_RedFirstActionSelector)
+Behaviors=(BehaviorName=Advent_ABA_RedFirstActionSelector, NodeType=Selector,      Child[0]=DoIfFlankedMove,      Child[1]=TryMoveThenGrenade,      Child[2]=MoveAdvanceToCover,       Child[3]=TryShootOrReloadOrOverwatch_Adv,      Child[4]=HuntEnemyWithCover)
+Behaviors=(BehaviorName=Advent_ABA_RedLastAction, NodeType=Sequence, Child[0]=IsLastActionPoint, Child[1]=Advent_ABA_RedLastActionSelector)
+Behaviors=(BehaviorName=Advent_ABA_RedLastActionSelector, NodeType=Selector,      Child[0]=TryGrenade,      Child[1]=TryShootOrReloadOrOverwatch_Adv,      Child[2]=HuntEnemyWithCover,      Child[3]=MoveDefensive)

; --- Advent Assault, Better AI
+Behaviors=(BehaviorName="AdventAssault::CharacterRoot", NodeType=Selector, Child[0]=TryJob, Child[1]=GenericGreenMovement, Child[2]=AdvTrooper_ABA_RedAlert, Child[3]=GenericAlertHandler)

; --- Advent Captain, Better AI
-Behaviors=(BehaviorName="AdventCaptain::CharacterRoot", NodeType=Selector, Child[0]=TryJob, Child[1]=GenericGreenMovement, Child[2]=AdvCaptain_RedAlert, Child[3]=GenericAlertHandler)
+Behaviors=(BehaviorName="AdventCaptain::CharacterRoot", NodeType=Selector, Child[0]=TryJob, Child[1]=GenericGreenMovement, Child[2]=AdvCaptain_ABA_RedAlert, Child[3]=GenericAlertHandler)

+Behaviors=(BehaviorName="AdventCaptain_ABA::CharacterRoot", NodeType=Selector, Child[0]=TryJob, Child[1]=GenericGreenMovement, Child[2]=AdvCaptain_ABA_RedAlert, Child[3]=GenericAlertHandler)
+Behaviors=(BehaviorName=AdvCaptain_ABA_RedAlert, NodeType=Sequence, Child[0]=IsRedAlert, Child[1]=AdvCaptain_ABA_RedAbilitySelector)
+Behaviors=(BehaviorName=AdvCaptain_ABA_RedAbilitySelector, NodeType=Selector, Child[0]=MimicBeaconBehavior, Child[1]=AdvCaptain_ABA_RedFirstAction, Child[2]=AdvCaptain_ABA_RedLastAction)
+Behaviors=(BehaviorName=AdvCaptain_ABA_RedFirstAction, NodeType=Sequence, Child[0]=NotLastActionPoint, Child[1]=AdvCaptain_ABA_RedFirstActionSelector)
+Behaviors=(BehaviorName=AdvCaptain_ABA_RedFirstActionSelector, NodeType=Selector,      Child[0]=DoIfFlankedMove,      Child[1]=AdvCaptainTryMoveThenGrenade,       Child[2]=TryCallReinforcementsABA,     Child[3]=TryMarkTargetOption_ABA,       Child[4]=MoveAdvanceToCover,     Child[5]=TryShootOrReloadOrOverwatch_Adv,      Child[6]=HuntEnemyWithCover)
+Behaviors=(BehaviorName=AdvCaptain_ABA_RedLastAction, NodeType=Sequence, Child[0]=IsLastActionPoint, Child[1]=AdvCaptain_ABA_RedLastActionSelector)
+Behaviors=(BehaviorName=AdvCaptain_ABA_RedLastActionSelector, NodeType=Selector,      Child[0]=AdvCaptainTryGrenade,      Child[1]=TryCallReinforcementsABA,      Child[2]=TryMarkTargetOption_ABA,      Child[3]=TryShootOrReloadOrOverwatch_Adv,      Child[4]=HuntEnemyWithCover,      Child[5]=MoveDefensive)

; --- New Advent Sniper, Better AI
+Behaviors=(BehaviorName="AdventSniper::CharacterRoot", NodeType=Selector, Child[0]=TryJob, Child[1]=GenericGreenMovement, Child[2]=AdvCaptain_Sniper_RedAlert, Child[3]=GenericAlertHandler)

+Behaviors=(BehaviorName=AdvCaptain_Sniper_RedAlert, NodeType=Sequence, Child[0]=IsRedAlert, Child[1]=AdvCaptain_Sniper_RedAbilitySelector)
+Behaviors=(BehaviorName=AdvCaptain_Sniper_RedAbilitySelector, NodeType=Selector, Child[0]=MimicBeaconBehavior, Child[1]=AdvCaptain_Sniper_RedFirstAction, Child[2]=AdvCaptain_Sniper_RedLastAction)
+Behaviors=(BehaviorName=AdvCaptain_Sniper_RedFirstAction, NodeType=Sequence, Child[0]=NotLastActionPoint, Child[1]=AdvCaptain_Sniper_RedFirstActionSelector)
+Behaviors=(BehaviorName=AdvCaptain_Sniper_RedFirstActionSelector, NodeType=Selector,      Child[0]=TryLightningHands,      Child[1]=DoIfFlankedMove,      Child[2]=TryShootOrReloadOrOverwatch_Sniper,      Child[3]=MoveStayBack)
+Behaviors=(BehaviorName=AdvCaptain_Sniper_RedLastAction, NodeType=Sequence, Child[0]=IsLastActionPoint, Child[1]=AdvCaptain_Sniper_RedLastActionSelector)
+Behaviors=(BehaviorName=AdvCaptain_Sniper_RedLastActionSelector, NodeType=Selector,       Child[0]=TrySmokeScreen,   		Child[1]=TryMarkTargetOption,    Child[2]=TryShootOrReloadOrOverwatch_Sniper,      Child[3]=MoveStayBack)

; --- New Advent Medic
+Behaviors=(BehaviorName="AdventMedic::CharacterRoot", NodeType=Selector, Child[0]=TryJob, Child[1]=GenericGreenMovement, Child[2]=AdvMedic_RedAlert, Child[3]=GenericAlertHandler)

+Behaviors=(BehaviorName=AdvMedic_RedAlert, NodeType=Sequence, Child[0]=IsRedAlert, Child[1]=AdvMedic_RedAbilitySelector)
+Behaviors=(BehaviorName=AdvMedic_RedAbilitySelector, NodeType=Selector, Child[0]=MimicBeaconBehavior, Child[1]=MedicFirstAction, Child[2]=MedicLastAction)
+Behaviors=(BehaviorName=MedicFirstAction, NodeType=Sequence, Child[0]=NotLastActionPoint, Child[1]=MedicFirstActionSelector)
+Behaviors=(BehaviorName=MedicLastAction, NodeType=Sequence, Child[0]=IsLastActionPoint, Child[1]=MedicLastActionSelector)
+Behaviors=(BehaviorName=MedicFirstActionSelector, NodeType=Selector, Child[0]=TryAdventMedikitOnTarget, Child[1]=MedicMoveTowardTroubled, Child[2]=TryMedicMoveDefensive, Child[3]=TryShootOrReloadOrOverwatch_Adv, Child[4]=HuntEnemyWithCover)
+Behaviors=(BehaviorName=MedicLastActionSelector, NodeType=Selector, Child[0]=TryAdventMedikitOnTarget, Child[1]=DoIfFlankedMove, Child[2]=MedicMoveTowardTroubled, Child[3]=TryShootOrReloadOrOverwatch_Adv, Child[4]=HuntEnemyWithCover)

; ---------------- Do shorthand for our new abilities ----------------
+EquivalentAbilities=(KeyName=AdventMedikit, EquivalentAbilityName[0]=MedikitHeal, EquivalentAbilityName[1]=NanoMedikitHeal)

; ---------------- Custom AI behavior to find destination next to wounded / incapacitated ally  ----------------
+CustomNodes=(NodeTypeString="AdventMedicAction", ExtendsFromType="Action", ClassName="LiberatorsOverhaulAdventOverhaul.AdventMedic_X2AIBTActions")
+Behaviors=(BehaviorName=SetDestinationNextToTroubledTeammate, NodeType=AdventMedicAction)

; ---------------- AdventMedic support behaviours ----------------
+Behaviors=(BehaviorName=TryMedicMoveDefensive, NodeType=Sequence, Child[0]=AnyAlliesVisible, Child[1]=MoveDefensive)

+Behaviors=(BehaviorName=IsAbilityAvailable-AdventMedikit, NodeType=Condition)
+Behaviors=(BehaviorName=SelectAbility-AdventMedikit, NodeType=Action)
+Behaviors=(BehaviorName=HasValidTarget-AdventMedikit, NodeType=Condition)
+Behaviors=(BehaviorName=SetTargetStack-AdventMedikit, NodeType=Action)
+Behaviors=(BehaviorName=TargetIsInjured, NodeType=TargetStatCondition, Param[0]=eStat_HP, Param[1]="<=", Param[2]="60%")
+Behaviors=(BehaviorName=TargetIsUnableToMove, NodeType=TargetStatCondition, Param[0]=ActionPoints, Param[1]="==", Param[2]="0")

; Advent Medic movement behaviours -- find a spot near wounded / incapacitated ally ----------------
+Behaviors=(BehaviorName=MedicMoveTowardTroubled, NodeType=Selector, Child[0]=MedicMoveToTroubled)
+Behaviors=(BehaviorName=MedicMoveToTroubled, NodeType=Sequence, Child[0]=IsAbilityAvailable-StandardMove, Child[1]=SetDestinationNextToTroubledTeammate, Child[2]=SelectAbility-StandardMove)

; AdventMedikit targeting behaviours -- target wounded ally or the medic ---------------- 
+Behaviors=(BehaviorName=TryAdventMedikitOnTarget, NodeType=Sequence, Child[0]=IsAbilityAvailable-AdventMedikit, Child[1]=SelectTargetForAdventMedikit, Child[2]=SelectAbility-AdventMedikit)
+Behaviors=(BehaviorName=SelectTargetForAdventMedikit, NodeType=Sequence, Child[0]=SetTargetStack-AdventMedikit, Child[1]=SelectBestTargetForAdventMedikit, Child[2]=HasValidTarget-AdventMedikit)
+Behaviors=(BehaviorName=SelectBestTargetForAdventMedikit, NodeType=RepeatUntilFail, Child[0]=EvaluateTargetsAdventMedikit)
+Behaviors=(BehaviorName=EvaluateTargetsAdventMedikit, NodeType=Sequence, Child[0]=SetNextTarget, Child[1]=TargetIsInjured, Child[2]=TargetScoreNonMedic, Child[3]=TargetScorePossibleDanger, Child[4]=TargetScoreHealth, Child[5]=UpdateBestTarget)

; We want the medic to prioritise others over himself when healing  ---------------- 
+Behaviors=(BehaviorName=TargetScoreNonMedic, NodeType=Selector, Child[0]=ScoreIfNotMedic, Child[1]=AddToTargetScore_0)
+Behaviors=(BehaviorName=ScoreIfNotMedic, NodeType=Sequence, Child[0]=TargetIsNotMedic, Child[1]=AddToTargetScore_15)
+Behaviors=(BehaviorName=TargetIsNotMedic, NodeType=Inverter, Child[0]=TargetIsAdventMedic)
+Behaviors=(BehaviorName=TargetIsAdventMedic, NodeType=Selector, Child[0]=TargetTemplateNameIs-AdvMedicM1, Child[1]=TargetTemplateNameIs-AdvMedicM2, Child[2]=TargetTemplateNameIs-AdvMedicM3)
+Behaviors=(BehaviorName=TargetTemplateNameIs-AdvMedicM1, NodeType=Condition)
+Behaviors=(BehaviorName=TargetTemplateNameIs-AdvMedicM2, NodeType=Condition)
+Behaviors=(BehaviorName=TargetTemplateNameIs-AdvMedicM3, NodeType=Condition)

; Aside from the group smoke cover, we want to target allies who are suppressed, or close to dying and will not move  ---------------- 
+Behaviors=(BehaviorName=TargetScorePossibleDanger, NodeType=Selector, Child[0]=ScoreIfSuppressed, Child[1]=ScoreIfKillable, Child[2]=AddToTargetScore_0)
+Behaviors=(BehaviorName=ScoreIfSuppressed, NodeType=Sequence, Child[0]=TargetAffectedByEffect-Suppression, Child[1]=AddToTargetScore_20)
+Behaviors=(BehaviorName=ScoreIfKillable, NodeType=Sequence, Child[0]=TargetIsUnableToMove, Child[1]=TargetIsVulnerable, Child[2]=AddToTargetScore_10)

